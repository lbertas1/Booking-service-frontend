$xs: 400px;
$s: 768px;
$m: 1200px;
$l: 1600px;
$xl: 1920px;

@mixin min-width($min) {
  @media all and (min-width: $min) {
    @content;
  }
}

@mixin max-width($min, $max) {
  @media all and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin max-width($max) {
  @media all and (max-width: $max) {
    @content;
  }
}

// mobile-first i kiedy ma sens:
// przede wszystkim mobile first stosujemy wtedy, kiedy spodziewamy się odpalania naszej strony również na urządzeniach mobilnych
// powody:
// -zdecydowanie łatwiej jest stworzyć wersję mobilną strony internetowej i potem przerabiąc ją na większe rozdzielczości niż odwrotnie
// -takie podejście pomaga w stworzeniu kompleksowego designu na wszystkie rozdzielczości
// -telefon odtwarzając stronę będzie pobierać mniejszy plik css, a komputer większy, w przeciwnym razie byłoby odwrodtnie, co jest nie logiczne
// i przekłąda się na skalowalność naszej strony
// -mniejsza waga plików css to też szybsza strona
// -wg statystyk już częściej odwiedzamy strony z telefonów komórkowych niż laptopów więc podejście mobile first i design strony w małej
// rozdzielczości wydaje się już być szczególnie ważne
